axis.text.x = element_text(size=14),
axis.text.y = element_text(size=14)
#   legend.title = element_blank(),
#    legend.text = element_text(size=14),
#plot.tag = element_text(size = 14, face = "bold"),
#   legend.position = "bottom"
)
plot(baselineAC_4F_PTARP_bar)
#can also use facet_wrap for Usher & RP
#geom point
baselineAC_4F_PTA_plot1LoF <- ggplot(data = truncating1variant, aes(x = HGVSp.vep, y = baselineAC_4F_PTA)) +
# geom_point(outlier.shape = NA) +
geom_quasirandom(aes(color = ClinicalDiag, shape = Gender)) +
xlab("Other allele in  1 truncating group") +
#  labs(y = "AC") +
theme_minimal() +
theme(axis.title.x = element_text(size=14 ),
axis.title.y = element_text(size=14 ),
axis.text.x = element_text(size=8, angle = 45, hjust = 1 ),
axis.text.y = element_text(size=14)
)
#  scale_color_aaas()
#geom_text_repel(data=subset(varcounts4, patient_AF > .01), aes(label = HGVSp_noaccession), size = 4) +
plot(baselineAC_4F_PTA_plot1LoF)
baselineAC_4F_PTA_plot1LoFmiss <- ggplot(data = subset(truncating1variant, Consequence == "missense/inframe_indel"), aes(x = HGVSp.vep, y = baselineAC_4F_PTA)) +
geom_boxplot(outlier.shape = NA) +
geom_quasirandom(aes(color = ClinicalDiag, shape = Gender)) +
xlab("Other allele in  1 truncating group") +
#  labs(y = "AC") +
theme_minimal() +
theme(axis.title.x = element_text(size=14 ),
axis.title.y = element_text(size=14 ),
axis.text.x = element_text(size=8, angle = 45, hjust = 1 ),
axis.text.y = element_text(size=14)
)
#  scale_color_aaas()
#geom_text_repel(data=subset(varcounts4, patient_AF > .01), aes(label = HGVSp_noaccession), size = 4) +
plot(baselineAC_4F_PTA_plot1LoFmiss)
baselineAC_4F_PTAMiss_cDNA <- ggplot(data = subset(truncating1variant, Consequence == "missense/inframe_indel"), aes(x = xaxis_cdna_pos_proband, y = baselineAC_4F_PTA)) +
geom_vline(xintercept = 2168, color = "black", linetype="dotted") + #exon13
geom_vline(xintercept = 2811, color = "black", linetype="dotted") +
geom_point(aes(color = ClinicalDiag, shape = Gender)) +
scale_x_continuous(breaks=seq(0,16000,1000)) +
#  geom_text_repel(data=subset(varcounts4, patient_AF > .01), aes(label = HGVSp_noaccession), size = 4) +
labs(title = "missence in 1 truncating group", x = "cDNA position") +
theme_minimal() +
scale_color_brewer(palette = "Set1") +
theme(axis.text.x=element_text(angle=90,hjust=1)) #+
#  geom_text_repel(data=subset(varcounts_cdna_pos, patient_freq > 0.015), aes(label = HGVSp.vep), size = 4)
#  scale_color_npg()
plot(baselineAC_4F_PTAMiss_cDNA)
olfactory_age <- ggplot(data = baselineAC_4F_PTA, aes(x = baselineAC_4F_PTA, y = age)) +
geom_boxplot(outlier.shape = NA) +
geom_quasirandom(aes(shape = ClinicalDiag, color = truncating_group)) +
stat_compare_means(method = "anova", label.y.npc = 0.9) +
xlab("baselineAC_4F_PTA") +
#  labs(y = "AC") +
theme_minimal() +
theme(axis.title.x = element_text(size=14 ),
axis.title.y = element_text(size=14 ),
axis.text.x = element_text(size=14 ), #angle = 45
axis.text.y = element_text(size=14)
)
#  scale_color_aaas()
#geom_text_repel(data=subset(varcounts4, patient_AF > .01), aes(label = HGVSp_noaccession), size = 4) +
plot(olfactory_age)
olfactory_age2 <- ggplot(data = baselineAC_4F_PTA, aes(x = baselineAC_4F_PTA, y = age)) +
geom_boxplot(outlier.shape = NA) +
geom_quasirandom(aes(color = truncating_group)) +
stat_compare_means(method = "anova", label.y.npc = 0.9) +
xlab("baselineAC_4F_PTA") +
facet_wrap(~ClinicalDiag) +
#  labs(y = "AC") +
theme_minimal() +
theme(axis.title.x = element_text(size=14 ),
axis.title.y = element_text(size=14 ),
axis.text.x = element_text(size=12, angle = 45),
axis.text.y = element_text(size=14)
)
#  scale_color_aaas()
#geom_text_repel(data=subset(varcounts4, patient_AF > .01), aes(label = HGVSp_noaccession), size = 4) +
plot(olfactory_age2)
# Compute one-way ANOVA test; Compute the analysis of variance
res.aov.all.age_baselineAC_4F_PTA <- aov(age ~ baselineAC_4F_PTA, data = baselineAC_4F_PTA)
# Summary of the analysis
summary(res.aov.all.age_baselineAC_4F_PTA)
#As the ANOVA test is significant, we can compute Tukey HSD (Tukey Honest Significant Differences, R function: TukeyHSD()) for performing multiple pairwise-comparison between the means of groups.
#The function TukeyHD() takes the fitted ANOVA as an argument.
TukeyHSD(res.aov.all.age_baselineAC_4F_PTA)
res.aov.RP.age_baselineAC_4F_PTA <- aov(age ~ baselineAC_4F_PTA, data = subset(baselineAC_4F_PTA, ClinicalDiag == "Non-syndromic RP"))
summary(res.aov.RP.age_baselineAC_4F_PTA)
TukeyHSD(res.aov.RP.age_baselineAC_4F_PTA)
res.aov.Usher.age_baselineAC_4F_PTA <- aov(age ~ baselineAC_4F_PTA, data = subset(baselineAC_4F_PTA, ClinicalDiag == "Usher syndrome type 2a"))
summary(res.aov.Usher.age_baselineAC_4F_PTA)
TukeyHSD(res.aov.Usher.age_baselineAC_4F_PTA)
cysts_se <- all_group_beforefilter %>%
filter(!is.na(cysts_se), cysts_se != "C)UNG/Q") %>%
mutate(cysts_se = as.factor(cysts_se ))
#  select(PtID, ClinicalDiag, Gender, age, cysts_se, truncating_group, truncating) %>%
cysts_se_cntUsherRP <- cysts_se  %>%
count(ClinicalDiag, cysts_se)
cysts_se_barUsherRP <- ggplot(cysts_se_cntUsherRP, aes(fill=cysts_se, y = n, x = ClinicalDiag, width=0.5)) +
geom_bar(position="fill", stat="identity") +
scale_fill_brewer(type= "qual", palette=3) +
theme_classic() +
geom_text(aes(label = n), size = 6, hjust = 0.5, vjust = 1.0, position ="fill") +
theme(axis.title.x = element_text(size=14),
axis.title.y = element_text(size=14),
axis.text.x = element_text(size=14),
axis.text.y = element_text(size=14)
#   legend.title = element_blank(),
#    legend.text = element_text(size=14),
#plot.tag = element_text(size = 14, face = "bold"),
#   legend.position = "bottom"
)
plot(cysts_se_barUsherRP)
chisq.test(cysts_se$cysts_se, cysts_se$ClinicalDiag, correct=FALSE)
chisq.test(cysts_se$cysts_se, cysts_se$truncating_group, correct=FALSE)
cysts_seUsher <- cysts_se %>% filter(ClinicalDiag == "Usher syndrome type 2a")
cysts_seRP <- cysts_se %>% filter(ClinicalDiag == "Non-syndromic RP")
chisq.test(cysts_seUsher$cysts_se, cysts_seUsher$truncating_group, correct=FALSE)
chisq.test(cysts_seUsher$cysts_se, cysts_seUsher$truncating, correct=FALSE)
chisq.test(cysts_seRP$cysts_se, cysts_seRP$truncating_group, correct=FALSE)
cysts_se_cnt <- cysts_se  %>%
count(truncating_group, cysts_se)
cysts_se_bar <- ggplot(cysts_se_cnt, aes(fill=cysts_se, y = n, x = truncating_group, width=0.5)) +
geom_bar(position="fill", stat="identity") +
scale_fill_brewer(type= "qual", palette=3) +
theme_classic() +
geom_text(aes(label = n), size = 6, hjust = 0.5, vjust = 1.0, position ="fill") +
theme(axis.title.x = element_text(size=14),
axis.title.y = element_text(size=14),
axis.text.x = element_text(size=14),
axis.text.y = element_text(size=14)
#   legend.title = element_blank(),
#    legend.text = element_text(size=14),
#plot.tag = element_text(size = 14, face = "bold"),
#   legend.position = "bottom"
)
plot(cysts_se_bar)
cysts_seUsher_cnt <- cysts_se  %>% filter(ClinicalDiag == "Usher syndrome type 2a") %>%
count(truncating_group, cysts_se)
cysts_seUsher_bar <- ggplot(cysts_seUsher_cnt, aes(fill=cysts_se, y = n, x = truncating_group, width=0.5)) +
geom_bar(position="fill", stat="identity") +
scale_fill_brewer(type= "qual", palette=3) +
labs(title = "Usher syndrome type 2a") +
theme_classic() +
geom_text(aes(label = n), size = 6, hjust = 0.5, vjust = 1.0, position ="fill") +
theme(axis.title.x = element_text(size=14),
axis.title.y = element_text(size=14),
axis.text.x = element_text(size=14),
axis.text.y = element_text(size=14)
#   legend.title = element_blank(),
#    legend.text = element_text(size=14),
#plot.tag = element_text(size = 14, face = "bold"),
#   legend.position = "bottom"
)
plot(cysts_seUsher_bar)
cysts_seUsher_cnt1 <- cysts_se  %>% filter(ClinicalDiag == "Usher syndrome type 2a") %>%
count(truncating, cysts_se)
cysts_seUsher_bar1 <- ggplot(cysts_seUsher_cnt1, aes(fill=cysts_se, y = n, x = truncating, width=0.5)) +
geom_bar(position="fill", stat="identity") +
scale_fill_brewer(type= "qual", palette=3) +
labs(title = "Usher syndrome type 2a") +
theme_classic() +
geom_text(aes(label = n), size = 6, hjust = 0.5, vjust = 1.0, position ="fill") +
theme(axis.title.x = element_text(size=14),
axis.title.y = element_text(size=14),
axis.text.x = element_text(size=14),
axis.text.y = element_text(size=14)
#   legend.title = element_blank(),
#    legend.text = element_text(size=14),
#plot.tag = element_text(size = 14, face = "bold"),
#   legend.position = "bottom"
)
plot(cysts_seUsher_bar1)
cysts_seRP_cnt <- cysts_se  %>% filter(ClinicalDiag == "Non-syndromic RP") %>%
count(truncating_group, cysts_se)
cysts_seRP_bar <- ggplot(cysts_seRP_cnt, aes(fill=cysts_se, y = n, x = truncating_group, width=0.5)) +
geom_bar(position="fill", stat="identity") +
scale_fill_brewer(type= "qual", palette=3) +
labs(title = "Non-syndromic RP") +
theme_classic() +
geom_text(aes(label = n), size = 6, hjust = 0.5, vjust = 1.0, position ="fill") +
theme(axis.title.x = element_text(size=14),
axis.title.y = element_text(size=14),
axis.text.x = element_text(size=14),
axis.text.y = element_text(size=14)
#   legend.title = element_blank(),
#    legend.text = element_text(size=14),
#plot.tag = element_text(size = 14, face = "bold"),
#   legend.position = "bottom"
)
plot(cysts_seRP_bar)
#can also use facet_wrap for Usher & RP
#geom point
cysts_se_plot1LoF <- ggplot(data = truncating1variant, aes(x = HGVSp.vep, y = cysts_se)) +
# geom_point(outlier.shape = NA) +
geom_quasirandom(aes(color = ClinicalDiag, shape = Gender)) +
xlab("Other allele in  1 truncating group") +
#  labs(y = "AC") +
theme_minimal() +
theme(axis.title.x = element_text(size=14 ),
axis.title.y = element_text(size=14 ),
axis.text.x = element_text(size=8, angle = 45, hjust = 1 ),
axis.text.y = element_text(size=14)
)
#  scale_color_aaas()
#geom_text_repel(data=subset(varcounts4, patient_AF > .01), aes(label = HGVSp_noaccession), size = 4) +
plot(cysts_se_plot1LoF)
cysts_se_plot1LoFmiss <- ggplot(data = subset(truncating1variant, Consequence == "missense/inframe_indel"), aes(x = HGVSp.vep, y = cysts_se)) +
geom_boxplot(outlier.shape = NA) +
geom_quasirandom(aes(color = ClinicalDiag, shape = Gender)) +
xlab("Other allele in  1 truncating group") +
#  labs(y = "AC") +
theme_minimal() +
theme(axis.title.x = element_text(size=14 ),
axis.title.y = element_text(size=14 ),
axis.text.x = element_text(size=8, angle = 45, hjust = 1 ),
axis.text.y = element_text(size=14)
)
#  scale_color_aaas()
#geom_text_repel(data=subset(varcounts4, patient_AF > .01), aes(label = HGVSp_noaccession), size = 4) +
plot(cysts_se_plot1LoFmiss)
cysts_seMiss_cDNA <- ggplot(data = subset(truncating1variant, Consequence == "missense/inframe_indel"), aes(x = xaxis_cdna_pos_proband, y = cysts_se)) +
geom_vline(xintercept = 2168, color = "black", linetype="dotted") + #exon13
geom_vline(xintercept = 2811, color = "black", linetype="dotted") +
geom_point(aes(color = ClinicalDiag, shape = Gender)) +
scale_x_continuous(breaks=seq(0,16000,1000)) +
#  geom_text_repel(data=subset(varcounts4, patient_AF > .01), aes(label = HGVSp_noaccession), size = 4) +
labs(title = "missence in 1 truncating group", x = "cDNA position") +
theme_minimal() +
scale_color_brewer(palette = "Set1") +
theme(axis.text.x=element_text(angle=90,hjust=1)) #+
#  geom_text_repel(data=subset(varcounts_cdna_pos, patient_freq > 0.015), aes(label = HGVSp.vep), size = 4)
#  scale_color_npg()
plot(cysts_seMiss_cDNA)
cysts_se_age <- ggplot(data = cysts_se, aes(x = cysts_se, y = age)) +
geom_boxplot(outlier.shape = NA) +
geom_quasirandom(aes(shape = ClinicalDiag, color = truncating_group)) +
stat_compare_means(method = "t.test", label.x.npc = "center") +
xlab("cysts_se") +
#  labs(y = "AC") +
theme_minimal() +
theme(axis.title.x = element_text(size=14 ),
axis.title.y = element_text(size=14 ),
axis.text.x = element_text(size=14 ), #angle = 45
axis.text.y = element_text(size=14)
)
#  scale_color_aaas()
#geom_text_repel(data=subset(varcounts4, patient_AF > .01), aes(label = HGVSp_noaccession), size = 4) +
plot(cysts_se_age)
cysts_se_age2 <- ggplot(data = cysts_se, aes(x = cysts_se, y = age)) +
geom_boxplot(outlier.shape = NA) +
geom_quasirandom(aes(color = truncating_group)) +
stat_compare_means(method = "t.test", label.x.npc = "center") +
xlab("cysts_se") +
facet_wrap(~ClinicalDiag) +
#  labs(y = "AC") +
theme_minimal() +
theme(axis.title.x = element_text(size=14 ),
axis.title.y = element_text(size=14 ),
axis.text.x = element_text(size=12, angle = 45),
axis.text.y = element_text(size=14)
)
#  scale_color_aaas()
#geom_text_repel(data=subset(varcounts4, patient_AF > .01), aes(label = HGVSp_noaccession), size = 4) +
plot(cysts_se_age2)
cysts_se_VisionLossOnsetAge <- ggplot(data = cysts_se, aes(x = cysts_se, y = VisionLossOnsetAge)) +
geom_boxplot(outlier.shape = NA) +
geom_quasirandom(aes(shape = ClinicalDiag, color = truncating_group)) +
stat_compare_means(method = "t.test", label.x.npc = "center") +
xlab("cysts_se") +
#  labs(y = "AC") +
theme_minimal() +
theme(axis.title.x = element_text(size=14 ),
axis.title.y = element_text(size=14 ),
axis.text.x = element_text(size=14 ), #angle = 45
axis.text.y = element_text(size=14)
)
#  scale_color_aaas()
#geom_text_repel(data=subset(varcounts4, patient_AF > .01), aes(label = HGVSp_noaccession), size = 4) +
plot(cysts_se_VisionLossOnsetAge)
cysts_se_VisionLossOnsetAge2 <- ggplot(data = cysts_se, aes(x = cysts_se, y = VisionLossOnsetAge)) +
geom_boxplot(outlier.shape = NA) +
geom_quasirandom(aes(color = truncating_group)) +
stat_compare_means(method = "t.test", label.x.npc = "center") +
xlab("cysts_se") +
facet_wrap(~ClinicalDiag) +
#  labs(y = "AC") +
theme_minimal() +
theme(axis.title.x = element_text(size=14 ),
axis.title.y = element_text(size=14 ),
axis.text.x = element_text(size=12, angle = 45),
axis.text.y = element_text(size=14)
)
#  scale_color_aaas()
#geom_text_repel(data=subset(varcounts4, patient_AF > .01), aes(label = HGVSp_noaccession), size = 4) +
plot(cysts_se_VisionLossOnsetAge2)
cysts_se_duration_vs <- ggplot(data = cysts_se, aes(x = cysts_se, y = duration_vs)) +
geom_boxplot(outlier.shape = NA) +
geom_quasirandom(aes(shape = ClinicalDiag, color = truncating_group)) +
stat_compare_means(method = "t.test", label.x.npc = "center") +
xlab("cysts_se") +
#  labs(y = "AC") +
theme_minimal() +
theme(axis.title.x = element_text(size=14 ),
axis.title.y = element_text(size=14 ),
axis.text.x = element_text(size=14 ), #angle = 45
axis.text.y = element_text(size=14)
)
#  scale_color_aaas()
#geom_text_repel(data=subset(varcounts4, patient_AF > .01), aes(label = HGVSp_noaccession), size = 4) +
plot(cysts_se_duration_vs)
cysts_se_duration_vs2 <- ggplot(data = cysts_se, aes(x = cysts_se, y = duration_vs)) +
geom_boxplot(outlier.shape = NA) +
geom_quasirandom(aes(color = truncating_group)) +
stat_compare_means(method = "t.test", label.x.npc = "center") +
xlab("cysts_se") +
facet_wrap(~ClinicalDiag) +
#  labs(y = "AC") +
theme_minimal() +
theme(axis.title.x = element_text(size=14 ),
axis.title.y = element_text(size=14 ),
axis.text.x = element_text(size=12, angle = 45),
axis.text.y = element_text(size=14)
)
#  scale_color_aaas()
#geom_text_repel(data=subset(varcounts4, patient_AF > .01), aes(label = HGVSp_noaccession), size = 4) +
plot(cysts_se_duration_vs2)
Usher_truncating1variant <- truncating1variant %>% filter(ClinicalDiag == "Usher syndrome type 2a")
Usher_truncating1variantPtNo <- distinct(Usher_truncating1variant, PtID) %>% nrow()
Usher_truncating1varcounts <- Usher_truncating1variant %>%
group_by(HGVSc.vep) %>%
summarise(patientAC = n()) %>%
mutate(patient_freq = patientAC / (Usher_truncating1variantPtNo*2)) %>%
arrange(desc(patient_freq)) %>%
mutate(patientRef_AC = Usher_truncating1variantPtNo*2 - patientAC)
RP_truncating1variant <- truncating1variant %>% filter(ClinicalDiag == "Non-syndromic RP")
RP_truncating1variantPtNo <- distinct(RP_truncating1variant, PtID) %>% nrow()
RP_truncating1varcounts <- RP_truncating1variant %>%
group_by(HGVSc.vep) %>%
summarise(patientAC = n()) %>%
mutate(patient_freq = patientAC / (RP_truncating1variantPtNo*2)) %>%
arrange(desc(patient_freq)) %>%
mutate(patientRef_AC = RP_truncating1variantPtNo*2 - patientAC)
# Usher_truncating1variantvarcounts_vep <- merge(x = Usher_truncating1variantvarcounts, y = vep,
#       by.x = "HGVSc.vep", by.y = "HGVSc.vep", all.x = TRUE,
#       sort = FALSE, suffixes = c(".x", ".y"), no.dups = TRUE,
#       incomparables = NULL)
# Usher_truncating1variantvarcounts_vep$Consequence <-  fct_explicit_na(Usher_truncating1variantvarcounts_vep$Consequence , "Exon del/dup")
#
# Usher_truncating1variantvarcounts_vep_gnomad <- merge(x = Usher_truncating1variantvarcounts_vep , y = gnomad_mini,
#       by.x = "HGVSc.vep", by.y = "HGVSc.short", all.x = TRUE,
#       sort = FALSE, suffixes = c(".x", ".y"), no.dups = TRUE,
#       incomparables = NULL) %>%
#   replace_na(list(Allele.Count = 0, Allele.Number = 250000,	Allele.Frequency = 0)) %>%
#   mutate(Ref.AC = Allele.Number - Allele.Count)
#
# Usher_truncating1variantvarcounts_vep_gnomad_clinvar <- left_join(Usher_truncating1variantvarcounts_vep_gnomad, clinvar_mini, by = "HGVSc.vep")
#
# Usher_truncating1variantvarcounts_vep_gnomad_clinvar <- Usher_varcounts_truncating1variantvep_gnomad_clinvar %>%
#   mutate(ClinicalSignificance = fct_explicit_na(Usher_truncating1variantvarcounts_vep_gnomad_clinvar$ClinicalSignificance, "Not in ClinVar"))
#
# Usher_truncating1variantpie <- ggplot(Usher_truncating1variantvarcounts_vep_gnomad_clinvar, aes(x=factor(1), fill=Consequence))+
#   geom_bar(width = 1)+
#   coord_polar("y") +
#   blank_theme + theme(axis.text.x=element_blank()) + scale_fill_brewer(palette = "Set1")
# plot(Usher_truncating1variantpie)
#
# Usher_truncating1variantfisher_patient_gnomad <- Usher_truncating1variantvarcounts_vep_gnomad_clinvar %>%
#   select(patientAC, patientRef_AC, Allele.Count, Ref.AC)
#
# Usher_fisher_patient_gnomad$OR     <- NA
# Usher_fisher_patient_gnomad$`95CI` <- NA
# Usher_fisher_patient_gnomad$Pvalue  <- NA
# Usher_N <- nrow(Usher_fisher_patient_gnomad)
#
# sapply(1:Usher_N, function(x) {
#   tmp <- fisher.test(matrix(unlist(Usher_fisher_patient_gnomad[x, 1:4]), nrow=2, ncol=2, byrow=T))
#   Usher_fisher_patient_gnomad[x,5:7] <<- c(round(tmp$estimate, 2), paste(round(tmp$conf.int,2), collapse = ";"),  round(tmp$p.value, 5))
# })
# #
# Usher_fisher_patient_gnomad <- Usher_fisher_patient_gnomad %>%select(OR:Pvalue)
#
# Usher_varcounts_vep_gnomad_clinvar_fisher <- cbind(Usher_varcounts_vep_gnomad_clinvar, Usher_fisher_patient_gnomad) %>% mutate(Pvalue = as.numeric(Pvalue))
#
# write_tsv(Usher_varcounts_vep_gnomad_clinvar_fisher, file.path('output/', "Usher_variants_annotation_fishers.txt"))
#
# Usher_overlapVariants <- filter(Usher_varcounts_vep_gnomad_clinvar_fisher, Allele.Frequency > 0)
#
# #p cut-off 0.05/95 = ? (excluding exon deletion)
# Usher_overlap_log10b <- ggplot(data = Usher_overlapVariants, aes(x = Allele.Frequency, y = patient_freq, shape = Consequence)) +
#   geom_point(aes(color = cut(Pvalue, c(-Inf, 0.00039, 1)))) +
# #  geom_jitter(position = position_jitter(width = 0, height = 0.1, seed = 1)) +
#   geom_abline(aes(intercept = 0, slope = 1, linetype = "y=1.0x")) +
#   scale_y_log10(limits = c(0.001, 0.5)) +
#   scale_x_log10(limits = c(0.000001,0.1)) +
# #  geom_text_repel(data=subset(overlapVariants, Pvalue < 0.00039), aes(label = HGVSp.vep), size = 4) +
#   labs(x = "gnomAD_AF (log10)", y = "patient_AF (log10)") +
#   theme_minimal() #+
# #  scale_color_manual(name = "Pvalue",
# #                     values = c("(-Inf,0.00039]" = "red",
# #                                  "(0.00039,1]" = "black")
# #                     )
# #labels = c("<= 17", "17 < qsec <= 19", "> 19")
# #  scale_color_npg()
#
# #geom_point(aes(colour = cut(qsec, c(-Inf, 17, 19, Inf))),
# #             size = 5) +
#
# #summary(overlapVariants$patient_AF)
#
# plot(Usher_overlap_log10b)
#
# Usher_varcounts_cdna_pos <- Usher_varcounts_vep_gnomad_clinvar_fisher %>%
#   filter(HGVSc.vep	!= "Exon del/dup") %>%
#   mutate(xaxis_cdna_pos_proband = str_extract(HGVSc.vep, "\\d+")) %>%
#   mutate(xaxis_cdna_pos_proband = as.numeric(xaxis_cdna_pos_proband)) #%>%
#
# Usher_varcounts_plot1 <- ggplot(data = Usher_varcounts_cdna_pos, aes(x = xaxis_cdna_pos_proband, y = patient_freq, color = Consequence)) +
#   geom_vline(xintercept = 2168, color = "black", linetype="dotted") + #exon13
#   geom_vline(xintercept = 2811, color = "black", linetype="dotted") +
#   geom_segment(aes(x=xaxis_cdna_pos_proband, xend=xaxis_cdna_pos_proband, y=0, yend = patient_freq)) +
#   scale_x_continuous(breaks=seq(0,16000,1000)) +
#   labs(title = "Usher_Patient_AF", x = "cDNA position", y = "Patient_AF") +
#   theme_minimal() +
#   scale_color_brewer(palette = "Set1") +
#   theme(axis.text.x=element_text(angle=90,hjust=1)) +
#   geom_text_repel(data=subset(Usher_varcounts_cdna_pos, patient_freq > 0.015), aes(label = HGVSp.vep), size = 4)
#
# #  scale_color_npg()
# plot(Usher_varcounts_plot1)
RPUsher_truncating1 <- full_join(RP_truncating1varcounts, Usher_truncating1varcounts, by = "HGVSc.vep", suffix = c(".RP", ".Usher")) %>%
replace_na(list(patientAC.RP = 0, patient_freq.RP = 0, patientRef_AC.RP = 2*RP_PtNo, patientAC.Usher = 0, patient_freq.Usher = 0, patientRef_AC.Usher = 2*Usher_PtNo))
RPUsher_truncating1fishercal <- RPUsher_truncating1 %>%
select(patientAC.RP, patientRef_AC.RP, patientAC.Usher, patientRef_AC.Usher)
RPUsher_truncating1fishercal$OR     <- NA
RPUsher_truncating1fishercal$`95CI` <- NA
RPUsher_truncating1fishercal$Pvalue  <- NA
RPUsher_truncating1N <- nrow(RPUsher_truncating1fishercal)
sapply(1:RPUsher_truncating1N, function(x) {
tmp <- fisher.test(matrix(unlist(RPUsher_truncating1fishercal[x, 1:4]), nrow=2, ncol=2, byrow=T))
RPUsher_truncating1fishercal[x,5:7] <<- c(round(tmp$estimate, 2), paste(round(tmp$conf.int,2), collapse = ";"),  round(tmp$p.value, 5))
})
#
RPUsher_truncating1fishercal <- RPUsher_truncating1fishercal %>%select(OR:Pvalue)
RPUsher_truncating1fisher <- cbind(RPUsher_truncating1, RPUsher_truncating1fishercal) %>% mutate(Pvalue = as.numeric(Pvalue))
RPUsher_truncating1fisher_annotation <- left_join(RPUsher_truncating1fisher, vep, by = "HGVSc.vep") %>%
replace_na(list(HGVSp.vep = "Exon del/dup"))
RPUsher_truncating1fisher_annotation$Consequence <-  fct_explicit_na(RPUsher_truncating1fisher_annotation$Consequence , "Exon del/dup")
write_tsv(RPUsher_truncating1fisher_annotation, file.path('output/', "RP_Usher_truncating1_variants_annotation_fishers.txt"))
RPUsher_truncating1 <- full_join(RP_truncating1varcounts, Usher_truncating1varcounts, by = "HGVSc.vep", suffix = c(".RP", ".Usher")) %>%
replace_na(list(patientAC.RP = 0, patient_freq.RP = 0, patientRef_AC.RP = 2*RP_PtNo, patientAC.Usher = 0, patient_freq.Usher = 0, patientRef_AC.Usher = 2*Usher_PtNo))
RPUsher_truncating1fishercal <- RPUsher_truncating1 %>%
select(patientAC.RP, patientRef_AC.RP, patientAC.Usher, patientRef_AC.Usher)
RPUsher_truncating1fishercal$OR     <- NA
RPUsher_truncating1fishercal$`95CI` <- NA
RPUsher_truncating1fishercal$Pvalue  <- NA
RPUsher_truncating1N <- nrow(RPUsher_truncating1fishercal)
sapply(1:RPUsher_truncating1N, function(x) {
tmp <- fisher.test(matrix(unlist(RPUsher_truncating1fishercal[x, 1:4]), nrow=2, ncol=2, byrow=T))
RPUsher_truncating1fishercal[x,5:7] <<- c(round(tmp$estimate, 2), paste(round(tmp$conf.int,2), collapse = ";"),  round(tmp$p.value, 5))
})
#
RPUsher_truncating1fishercal <- RPUsher_truncating1fishercal %>%select(OR:Pvalue)
RPUsher_truncating1fisher <- cbind(RPUsher_truncating1, RPUsher_truncating1fishercal) %>% mutate(Pvalue = as.numeric(Pvalue))
RPUsher_truncating1fisher_annotation <- left_join(RPUsher_truncating1fisher, vep, by = "HGVSc.vep") %>%
replace_na(list(HGVSp.vep = "Exon del/dup"))
RPUsher_truncating1fisher_annotation$Consequence <-  fct_explicit_na(RPUsher_truncating1fisher_annotation$Consequence , "Exon del/dup")
write_tsv(RPUsher_truncating1fisher_annotation, file.path('output/', "RP_Usher_truncating1_variants_annotation_fishers.txt"))
RPUsher_truncating1p <- ggplot(data = RPUsher_truncating1fisher_annotation, aes(x = patient_freq.RP, y = patient_freq.Usher, color = Consequence)) +
#  geom_point(alpha = 0.2) +
geom_jitter(position = position_jitter(width = 0.001, height = 0.001), seed = 1) +
geom_abline(aes(intercept = 0, slope = 1, linetype = "y=1.0x")) +
#  scale_y_log10(limits = c(0.001, 0.5)) +
#  scale_x_log10(limits = c(0.000001,0.1)) +
geom_text_repel(data=subset(RPUsher_truncating1fisher_annotation, Pvalue < 0.1), aes(label = HGVSp.vep), size = 4) +
labs(x = "RP_AF", y = "Usher_AF") +
theme_minimal() +
scale_color_brewer(palette = "Set1")
#  scale_color_manual(name = "Pvalue",
#                     values = c("(-Inf,0.00039]" = "red",
#                                  "(0.00039,1]" = "black")
#                     )
#labels = c("<= 17", "17 < qsec <= 19", "> 19")
#  scale_color_npg()
#geom_point(aes(colour = cut(qsec, c(-Inf, 17, 19, Inf))),
#             size = 5) +
#summary(overlapVariants$patient_AF)
plot(RPUsher_truncating1p)
# ##Sigma AF bar charts for RP and Usher
# RP_Usher_SigmaAF <- RPUsher_truncating1fisher_annotation %>%
#   group_by(Consequence) %>%
#   summarise(RP = sum(patient_freq.RP), Usher = sum(patient_freq.Usher))
#
# RP_Usher_SigmaAF <- RP_Usher_SigmaAF %>% gather(Diagnosis, "Sum_AF", RP:Usher)
#
# RP_Usher_SigmaAF$Consequence = factor(RP_Usher_SigmaAF$Consequence,
#                                             levels = c("Exon del/dup", "LoF", "missense/inframe_indel", "synonymous", "other intronic"))
#
# SigmaAF_p <- ggplot(data = RP_Usher_SigmaAF, aes(x=Consequence, y=Sum_AF, fill = Diagnosis)) +
#   geom_bar(sta="identity", position=position_dodge()) +
#   theme_minimal() +
#   scale_fill_brewer(palette="Blues") +
#   theme(axis.text.x=element_text(angle=45,hjust=1))
#
# plot(SigmaAF_p)
save.image("C:/Bin-Guan/R/RUSH2A/RUSH2A_Feb2020.RData")
view(all_group_beforefilter)
view(truncating1variant)
write_tsv(truncating1variant, file.path('output/', "truncating1variant.txt"))
